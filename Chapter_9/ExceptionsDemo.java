package Chapter_9;

public class ExceptionsDemo {

    // В этом классе демонстрируется применение блоков try и catch для обработки исключений (Exceptions)
    public static void main (String agrs[]){

        //Создаём два массива, будем делить x/y и обрабатывать ошибки
        int x[] = {2, 4, 8, 10, 12, 14, 20};
        int y[] = {1, 2, 0, 10, 6, 0};

        //Перехват критических исключений. Обрабатывается, если полученное исключение не обрабатывается в цикле for(), цикл завершается
        try{

            for (int i = 0; i < x.length; i++){

                //Обрабатывается не критическое исключение, в данном случае Деление на 0. После обработки выполнение цикла for() продолжается
                try {
                    System.out.println( x[i] + " / " + y[i] + " равно " + (x[i]/y[i]) );
                } catch (ArithmeticException exc){
                    System.out.println("Ошибка! Деление на 0");
                }

            }
        }

        //Данный класс (Throwable) является суперклассом для всех исключений, он подходит для тех ситуаций, когда независимо от ошибки необходимо продолжить выполнение программы,
        // либо для того, чтобы избежать дублирования кода при обработке исключений (например, если может быть несколько вариантов, но действия всегда одинаковые)
        catch (Throwable exc){
            System.out.print("Фатальная ошибка, выход из цикла...");
        }

    }
}
